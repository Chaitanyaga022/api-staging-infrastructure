Resources:
  # S3 Bucket for ingesting data
  ApiStagingCgBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName # Use a parameter for bucket name

  # Lambda Function for processing data and storing in S3
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName # Use a parameter for function name
      Role: !GetAtt LambdaExecutionRole.Arn # Role attached to the Lambda function
      Code:
        S3Bucket: !Ref BucketName # The bucket where the Lambda code is stored
        S3Key: !Ref LambdaS3Key # The key to the Lambda code in S3
      Handler: lambda_function.handler # The handler function for Lambda
      Runtime: python3.8 # You can change this to your runtime

  # EventBridge Rule to trigger Lambda periodically
  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref EventBridgeRuleName
      ScheduleExpression: !Ref ScheduleExpression # Schedule when the rule runs
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn # The Lambda function to be triggered
          Id: TargetLambda

  # IAM Role for Lambda execution (for S3 access, CloudWatch logs, etc.)
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "lambda.amazonaws.com"
      Policies:
        - PolicyName: "LambdaS3Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                Resource: "arn:aws:s3:::api-staging-cg/*"
              - Effect: "Allow"
                Action:
                  - "logs:*"
                Resource: "*"

  # IAM Role for EventBridge Scheduler to invoke Lambda
  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "events.amazonaws.com"
      Policies:
        - PolicyName: "EventBridgeSchedulerPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: !GetAtt LambdaFunction.Arn

Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket
    Default: api-staging-cg

  LambdaFunctionName:
    Type: String
    Description: The name of the Lambda function
    Default: api-staging-lambda-cg

  LambdaS3Key:
    Type: String
    Description: The key of the Lambda code in S3
    Default: lambda_code/lambda_function.zip

  EventBridgeRuleName:
    Type: String
    Description: The name of the EventBridge rule
    Default: api-staging-evntbrdg-cg

  ScheduleExpression:
    Type: String
    Description: The cron schedule for triggering the Lambda function
    Default: rate(1 hour)
